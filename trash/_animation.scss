@use "sass:map";
@use "../global" as *;

.hover--bgc-slide {
  position: relative;
  overflow: hidden;
  &::before {
    content: "";
    transform-origin: 0% 50%;
    transform: scaleX(0);
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: -1;
    background-color: map.get($color, hov-btn);
    transition: transform 0.3s;
  }
  &:hover::before {
    transform: scaleX(1);
  }
}

.hover__underline--from-left {
  background-image: linear-gradient(90deg, map.get($color, accent), map.get($color, accent)); /* 改行しても下線を表示させるためにimage */
  background-repeat: no-repeat;
  background-position: left bottom; /* X軸の起点 Y軸の起点 */
  background-size: 0 1px; /* 線の横幅を0、縦幅を1pxに */
  transition: background-size 0.3s; /* 線を伸ばすアニメーション実行時間を指定 */

  &:hover {
    background-size: 100% 1px; /* 線の横幅を100%にする */
  }
}

@keyframes kirin-dash {
  // キリンの向き（0degで右向き、180degで左向き）
  $kirin-direction: 0deg;
  // キリン左端
  0%,
  100% {
    // right: auto;
    left: 30px;
    transform: rotate(0deg);
  }
  // キリン右端
  50% {
    left: calc(100vw - 100px - 30px);
    // right: 30px;

    // left: auto;
    // right: calc(100vw - 30px);
  }
  // 5%～95%の間5%毎に傾き幅を反転
  // 50%以上でキリンの向きを反転
  @for $i from 1 through 19 {
    @if $i >= 10 {
      $kirin-direction: 180deg;
    }
    #{calc($i * 5%)} {
      @if $i % 2 == 0 {
        transform: rotate(calc(15deg * -1)) rotateY($kirin-direction);
      } @else {
        transform: rotate(calc(15deg * 1)) rotateY($kirin-direction);
      }
    }
  }
}

//headerの横幅分キリンの移動距離を変える
@media screen and (min-width: 1024px) {
  @keyframes kirin-dash {
    // キリンの向き（0degで右向き、180degで左向き）
    $kirin-direction: 0deg;
    // キリン左端
    0%,
    100% {
      // right: auto;
      left: 15px;
      transform: rotate(0deg);
    }
    // キリン右端
    50% {
      left: calc(100vw - 200px - 100px - 15px);
      // right: 30px;
      // left: auto;
      // right: calc(100vw - 30px);
    }
    // 5%～95%の間5%毎に傾き幅を反転
    // 50%以上でキリンの向きを反転
    @for $i from 1 through 19 {
      @if $i >= 10 {
        $kirin-direction: 180deg;
      }
      #{calc($i * 5%)} {
        @if $i % 2 == 0 {
          transform: rotate(calc(15deg * -1)) rotateY($kirin-direction);
        } @else {
          transform: rotate(calc(15deg * 1)) rotateY($kirin-direction);
        }
      }
    }
  }
}
