@use "sass:map";
@use "../global" as *;

// お名前、メールアドレス、電話、お問い合わせ内容の入力フォーム
input[type="text"],
input[type="email"],
input[type="tel"],
input[type="date"],
select,
textarea {
  // 入力場所
  overflow: hidden; // 長文のはみ出し対策
  border: 1px solid transparent; // ガタツキ防止
  border-radius: 4px;
  background: #f6f6f6;
  width: 100%;
  padding: 14px 15px;
  font-family: inherit;
  color: var(--font);
  &::placeholder {
    color: #c2c2c2;
    @include font(16, 500, null, null);
  }
  &:hover,
  &:focus {
    border-color: var(--main);
  }
}
// textareaは高さ方向の設定も必要
textarea {
  // 高さの初期値
  min-height: 200px;
  @include mq(sp) {
    min-height: 160px;
  }
  // 高さは可変、横幅は固定
  resize: vertical;
}
input[type="radio"],
input[type="checkbox"] {
  // 標準のラジオボタンを以下５行で非表示
  width: 1px;
  height: 1px;
  position: absolute;
  clip: rect(0, 0, 0, 0);
  overflow: hidden;
  & + label {
    // ボタン横の文字
    @include font(14, 500, null, null);
    // ボタンの場所
    padding-left: calc(24px + 8px);
    position: relative;
    display: flex;
    align-items: center;
    // ボタン枠
    &::before {
      // ボタン枠の配置場所
      content: "";
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      left: 0;
      border: 1px solid var(--main);
      // ボタン枠のレイアウトは別途下に記載
    }
    // チェックマーク（ポチ丸・✓）
    &::after {
      // チェックマークの配置
      content: "";
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      left: 6px;
      opacity: 0; // 非チェック時はポチ丸が透明
    }
  }
  &:hover,
  &:focus {
    & + label::before {
      border: 2px solid var(--main);
    }
  }
  // チェック時にチェック時マークを表示
  &:checked + label::after {
    opacity: 1;
  }
}
// ボタン枠のレイアウト
input[type="radio"] {
  & + label {
    &::before {
      // ラジオボタン枠のレイアウト
      width: 24px;
      height: 24px;
      background: white;
      border-radius: 50%;
    }
    // チェック時マーク（ポチ丸）
    &::after {
      width: 12px;
      height: 12px;
      border-radius: 50%;
      background: var(--main);
    }
  }
}
input[type="checkbox"] {
  & + label {
    &::before {
      // チェックボックス枠のレイアウト
      width: 24px;
      height: 24px;
      background: white;
    }
    // チェック時マーク（✓）
    &::after {
      width: 13px;
      height: 8px;
      border-bottom: solid 2px var(--main);
      border-left: solid 2px var(--main);
      transform: translateY(-70%) rotate(-45deg);
    }
  }
}
select {
  background: #f6f6f6 url(../../reserve/img/select-arrow.svg) no-repeat right 12px center;
  @include mq(sp) {
    background-position: right 9px center;
  }
}
input[type="date"] {
  padding: 13px 10px;
  background: #f6f6f6 url(../../reserve/img/icon-calender.svg) no-repeat right 12px center;
  position: relative;
  &::-webkit-calendar-picker-indicator {
    // デフォルトのカレンダーを非表示にする
    opacity: 0;
    // 入力欄クリック時にカレンダーウィンドウを表示する（デフォルトはカレンダーアイコンクリック時）
    position: absolute;
    width: 100%;
    height: 100%;
  }
  @include mq(sp) {
    background-position: right 9px center;
  }
}
input[type="date"] {
  // 標準設定を削除
  &::-webkit-datetime-edit-fields-wrapper {
    display: none;
  }
  // placeholderに設定した文字列を表示
  &::before {
    content: attr(placeholder);
    width: 100%;
    color: #c2c2c2;
  }
}
.error-message {
  display: none;
  color: var(--accent);
  @include font(14, 500, null, null);
  margin-top: 8px;
}
